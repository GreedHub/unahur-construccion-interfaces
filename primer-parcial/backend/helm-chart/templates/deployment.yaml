apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name}}
  namespace: {{ .Values.namespace}}
  labels:
    app: {{ .Values.name}}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Values.name}}
  template:
    metadata:
      labels:
        app: {{ .Values.name}}
      annotations:
        timestamp: "{{ .Values.timestamp }}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret}}
      containers:
      - name: {{ .Values.name}}
        image: {{ .Values.image.name}}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.api.exposedPort}}
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.api.exposedPort}}
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
        resources:
          requests:
            memory: "32Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "1"
        env:
        - name: "APP_NAME"
          value: {{ .Values.name}}
        - name: "GPT_TOKEN"
          value: {{ .Values.gptToken}}
        - name: "CORS_ENABLED_ORIGINS"
          value: {{ .Values.corsEnabledOrigins | quote}}
        - name: "API_PORT"
          value: {{ .Values.api.exposedPort | quote}}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - name: {{ .Values.name}}-api
          containerPort: {{ .Values.api.exposedPort}}
